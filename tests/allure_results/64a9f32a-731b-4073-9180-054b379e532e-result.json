{"name": "test_tcp_upd_wpa2_personal_bridge_5g_band_ac_station[setup_profiles0]", "status": "broken", "statusDetails": {"message": "FileNotFoundError: [Errno 2] No such file or directory: '../lanforge/reports/dataplane-2022-02-15-05-45-31/dataplane-report-2022-02-15-05-37-21.pdf'", "trace": "self = <tests.e2e.basic.performance_tests.dataplane_throughput_test.wpa2_security.test_dp_cc.TestDataplaneThroughputBRIDGE object at 0x7fe9f6807fa0>, lf_tools = <lf_tools.ChamberView object at 0x7fe9f680cc70>\nlf_test = <lanforge.lf_tests.RunTest object at 0x7fe9f680cdf0>, station_names_fiveg = ['wlan100'], create_lanforge_chamberview_dut = 'cisco9130axe'\nget_configuration = {'access_point': [{'chamber': 'C1', 'ip': '192.168.100.109', 'jumphost': True, 'jumphost_tty': '/dev/ttyAP1', ...}, {'...hy0'], '2.4G-Station-Name': 'wlan0', '5G-Radio': ['1.1.wiphy1'], '5G-Station-Name': 'wlan1', ...}, 'name': 'lanforge'}}\n\n    @pytest.mark.nikita\n    @pytest.mark.wpa2_personal\n    @pytest.mark.fiveg\n    @pytest.mark.twow\n    def test_tcp_upd_wpa2_personal_bridge_5g_band_ac_station(self, lf_tools,\n                                                             lf_test, station_names_fiveg,\n                                                             create_lanforge_chamberview_dut,\n                                                             get_configuration):\n        \"\"\"Dataplane THroughput BRIDGE Mode\n           pytest -m \"dataplane_throughput_test and BRIDGE and wpa2_personal and twog\"\n        \"\"\"\n        profile_data = setup_params_general[\"ssid_modes\"][\"wpa2_personal\"][1]\n        ssid_name = profile_data[\"ssid_name\"]\n        security_key = profile_data[\"security_key\"]\n        security = \"wpa2\"\n        mode = \"BRIDGE\"\n        band = \"fiveg\"\n        vlan = 1\n        dut_name = create_lanforge_chamberview_dut\n    \n        station = lf_test.Client_Connect(ssid=ssid_name, security=security,\n                                         passkey=security_key, mode=mode, band=band,\n                                         station_name=station_names_fiveg, vlan_id=vlan)\n    \n        if station:\n            dp_obj = lf_test.dataplane(station_name=station_names_fiveg, mode=mode,\n                                       instance_name=\"TIP_DPT_DPT_WPA2_2G_BRIDGE\",\n                                       vlan_id=vlan, dut_name=dut_name)\n            report_name = dp_obj.report_name[0]['LAST'][\"response\"].split(\":::\")[1].split(\"/\")[-1]\n>           lf_tools.attach_report_graphs(report_name=report_name, pdf_name=\"Dataplane Throughput Test - TCP-UDP 2.4G\")\n\n/home/nikita/candela_projects/6052_branch_check/wlan-testing/tests/e2e/basic/performance_tests/dataplane_throughput_test/wpa2_security/test_dp_cc.py:68: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n/home/nikita/candela_projects/6052_branch_check/wlan-testing/libs/lanforge/lf_tools.py:509: in attach_report_graphs\n    allure.attach.file(source=relevant_path + pdf,\n/usr/local/lib/python3.8/dist-packages/allure_commons/_allure.py:182: in file\n    plugin_manager.hook.attach_file(source=source, name=name, attachment_type=attachment_type, extension=extension)\n/home/nikita/.local/lib/python3.8/site-packages/pluggy/hooks.py:286: in __call__\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\n/home/nikita/.local/lib/python3.8/site-packages/pluggy/manager.py:93: in _hookexec\n    return self._inner_hookexec(hook, methods, kwargs)\n/home/nikita/.local/lib/python3.8/site-packages/pluggy/manager.py:84: in <lambda>\n    self._inner_hookexec = lambda hook, methods, kwargs: hook.multicall(\n/usr/local/lib/python3.8/dist-packages/allure_pytest/listener.py:226: in attach_file\n    self.allure_logger.attach_file(uuid4(), source, name=name, attachment_type=attachment_type, extension=extension)\n/usr/local/lib/python3.8/dist-packages/allure_commons/reporter.py:114: in attach_file\n    plugin_manager.hook.report_attached_file(source=source, file_name=file_name)\n/home/nikita/.local/lib/python3.8/site-packages/pluggy/hooks.py:286: in __call__\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\n/home/nikita/.local/lib/python3.8/site-packages/pluggy/manager.py:93: in _hookexec\n    return self._inner_hookexec(hook, methods, kwargs)\n/home/nikita/.local/lib/python3.8/site-packages/pluggy/manager.py:84: in <lambda>\n    self._inner_hookexec = lambda hook, methods, kwargs: hook.multicall(\n/usr/local/lib/python3.8/dist-packages/allure_commons/logger.py:53: in report_attached_file\n    shutil.copy2(source, destination)\n/usr/lib/python3.8/shutil.py:435: in copy2\n    copyfile(src, dst, follow_symlinks=follow_symlinks)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nsrc = '../lanforge/reports/dataplane-2022-02-15-05-45-31/dataplane-report-2022-02-15-05-37-21.pdf'\ndst = '/home/nikita/candela_projects/6052_branch_check/wlan-testing/tests/allure_results/375cb22f-0ef7-43d7-9070-3f2c13152e35-attachment.attach'\n\n    def copyfile(src, dst, *, follow_symlinks=True):\n        \"\"\"Copy data from src to dst in the most efficient way possible.\n    \n        If follow_symlinks is not set and src is a symbolic link, a new\n        symlink will be created instead of copying the file it points to.\n    \n        \"\"\"\n        sys.audit(\"shutil.copyfile\", src, dst)\n    \n        if _samefile(src, dst):\n            raise SameFileError(\"{!r} and {!r} are the same file\".format(src, dst))\n    \n        file_size = 0\n        for i, fn in enumerate([src, dst]):\n            try:\n                st = _stat(fn)\n            except OSError:\n                # File most likely does not exist\n                pass\n            else:\n                # XXX What about other special files? (sockets, devices...)\n                if stat.S_ISFIFO(st.st_mode):\n                    fn = fn.path if isinstance(fn, os.DirEntry) else fn\n                    raise SpecialFileError(\"`%s` is a named pipe\" % fn)\n                if _WINDOWS and i == 0:\n                    file_size = st.st_size\n    \n        if not follow_symlinks and _islink(src):\n            os.symlink(os.readlink(src), dst)\n        else:\n>           with open(src, 'rb') as fsrc, open(dst, 'wb') as fdst:\nE           FileNotFoundError: [Errno 2] No such file or directory: '../lanforge/reports/dataplane-2022-02-15-05-45-31/dataplane-report-2022-02-15-05-37-21.pdf'\n\n/usr/lib/python3.8/shutil.py:264: FileNotFoundError"}, "description": "Dataplane THroughput BRIDGE Mode\n           pytest -m \"dataplane_throughput_test and BRIDGE and wpa2_personal and twog\"\n        ", "attachments": [{"name": "Dataplane Throughput Test - TCP-UDP 2.4G", "source": "375cb22f-0ef7-43d7-9070-3f2c13152e35-attachment.attach"}], "parameters": [{"name": "setup_profiles", "value": "{'mode': 'BRIDGE', 'ssid_modes': {'wpa2_personal': [{'ssid_name': 'ssid_wpa2_2g', 'appliedRadios': ['2G'], 'security_key': 'something', 'security': 'psk2'}, {'ssid_name': 'ssid_wpa2_5g', 'appliedRadios': ['5G'], 'security_key': 'something', 'security': 'psk2'}]}, 'rf': {}, 'radius': False}"}], "start": 1644932192296, "stop": 1644932784149, "uuid": "aa9221b5-44df-4842-a299-3d42f6ff78c0", "historyId": "d2288cd1143009c62dd9f3d5cb61219a", "testCaseId": "7ef44497dfb24968336e394a24e964c3", "fullName": "e2e.basic.performance_tests.dataplane_throughput_test.wpa2_security.test_dp_cc.TestDataplaneThroughputBRIDGE#test_tcp_upd_wpa2_personal_bridge_5g_band_ac_station", "labels": [{"name": "feature", "value": "BRIDGE MODE Dataplane Throughput Test"}, {"name": "suite", "value": "performance"}, {"name": "tag", "value": "performance"}, {"name": "tag", "value": "twow"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup_profiles')"}, {"name": "tag", "value": "bridge"}, {"name": "tag", "value": "nikita"}, {"name": "tag", "value": "wpa2_personal"}, {"name": "tag", "value": "dataplane_throughput_test"}, {"name": "tag", "value": "fiveg"}, {"name": "parentSuite", "value": "e2e.basic.performance_tests.dataplane_throughput_test.wpa2_security"}, {"name": "subSuite", "value": "TestDataplaneThroughputBRIDGE"}, {"name": "host", "value": "candela-nikita"}, {"name": "thread", "value": "360931-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "e2e.basic.performance_tests.dataplane_throughput_test.wpa2_security.test_dp_cc"}]}